{"id":"22de231b-dcb7-4bb3-b2df-ccfa90b78dce","zed":"context","version":"0.4.0","text":"\n\n\n```svelte todos/src/routes/+page.svelte\n<script lang=\"ts\">\n\timport { Input } from '$lib/components/ui/input';\n\timport { Button } from '$lib/components/ui/button';\n\timport { Card, CardContent } from '$lib/components/ui/card';\n\timport { Textarea } from '$lib/components/ui/textarea';\n\timport { X, Edit2 } from 'lucide-svelte';\n\timport { onMount } from 'svelte';\n\n\tlet todoInput = '';\n\tlet activeElement: HTMLElement | null = null;\n\tlet initialX: number = null;\n\tlet initialY: number = null;\n\tlet offsetX: number = null;\n\tlet offsetY: number = null;\n\tlet todos: { id: string; text: string }[] = [];\n\tlet editingId: string | null = null;\n\n\t// Load todos from localStorage on mount\n\tonMount(() => {\n\t\tconst storedTodos = localStorage.getItem('todos');\n\t\tif (storedTodos) {\n\t\t\ttodos = JSON.parse(storedTodos);\n\t\t}\n\t});\n\n\t// Save todos to localStorage\n\tfunction saveTodos() {\n\t\tif (typeof localStorage !== 'undefined') {\n\t\t\tlocalStorage.setItem('todos', JSON.stringify(todos));\n\t\t}\n\t}\n\n\t// Function to add a new todo\n\tfunction addTodo() {\n\t\tif (!todoInput.trim()) return;\n\n\t\t// Generate random position within viewport\n\t\tconst maxX = window.innerWidth - 250;\n\t\tconst maxY = window.innerHeight - 150;\n\t\tconst randomX = Math.max(100, Math.floor(Math.random() * maxX));\n\t\tconst randomY = Math.max(100, Math.floor(Math.random() * maxY));\n\n\t\t// Create a new todo object\n\t\tconst todo = {\n\t\t\tid: crypto.randomUUID(),\n\t\t\ttext: todoInput,\n\t\t\tx: randomX,\n\t\t\ty: randomY,\n\t\t\tzIndex: 10,\n\t\t\tediting: false\n\t\t};\n\n\t\t// Update todos array and save to localStorage\n\t\ttodos = [...todos, todo];\n\t\tsaveTodos(); // Save immediately after adding a todo\n\t\ttodoInput = '';\n\t}\n\n\t// Delete a todo\n\tfunction deleteTodo(id) {\n\t\ttodos = todos.filter((todo) => todo.id !== id);\n\t\tsaveTodos(); // Save after deleting a todo\n\t}\n\n\t// Start editing a todo\n\tfunction startEditing(id) {\n\t\teditingId = id;\n\t}\n\n\t// Update todo text\n\tfunction updateTodo(id, newText) {\n\t\ttodos = todos.map((todo) => (todo.id === id ? { ...todo, text: newText } : todo));\n\t\tsaveTodos(); // Save after updating a todo\n\t}\n\n\t// Finish editing\n\tfunction finishEditing() {\n\t\teditingId = null;\n\t}\n\n\t// Dragging logic\n\tfunction dragStart(e, todo) {\n\t\t// Don't start drag if we're editing\n\t\tif (editingId === todo.id || e.target.closest('.edit-area')) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore if clicking buttons\n\t\tif (e.target.tagName === 'BUTTON' || e.target.closest('button')) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Set active element\n\t\tactiveElement = todo;\n\n\t\t// Bring to front\n\t\ttodos = todos.map((t) => ({\n\t\t\t...t,\n\t\t\tzIndex: t.id === todo.id ? 100 : 10\n\t\t}));\n\n\t\tinitialX = e.clientX;\n\t\tinitialY = e.clientY;\n\n\t\t// Find the DOM element\n\t\tconst element = document.getElementById(todo.id);\n\t\toffsetX = element.offsetLeft;\n\t\toffsetY = element.offsetTop;\n\n\t\tdocument.addEventListener('mousemove', drag);\n\t\tdocument.addEventListener('mouseup', dragEnd);\n\t}\n\n\t// Handle the drag move\n\tfunction drag(e) {\n\t\tif (activeElement) {\n\t\t\te.preventDefault();\n\n\t\t\tconst currentX = e.clientX - initialX;\n\t\t\tconst currentY = e.clientY - initialY;\n\n\t\t\t// Update the position in the todos array\n\t\t\ttodos = todos.map((todo) => {\n\t\t\t\tif (todo.id === activeElement.id) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...todo,\n\t\t\t\t\t\tx: offsetX + currentX,\n\t\t\t\t\t\ty: offsetY + currentY\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn todo;\n\t\t\t});\n\t\t\tsaveTodos(); // Save after drag\n\t\t}\n\t}\n\n\t// End dragging\n\tfunction dragEnd() {\n\t\tactiveElement = null;\n\t\tdocument.removeEventListener('mousemove', drag);\n\t\tdocument.removeEventListener('mouseup', dragEnd);\n\t}\n\n\t// Handle keydown for add/edit functionality\n\tfunction handleKeyDown(e) {\n\t\tif (e.key === 'Enter' && !e.shiftKey && !editingId) {\n\t\t\taddTodo();\n\t\t}\n\n\t\tif (e.key === 'Escape' && editingId) {\n\t\t\tfinishEditing();\n\t\t}\n\t}\n</script>\n\n<svelte:window on:keydown={handleKeyDown} />\n\n<Card class=\"fixed left-4 top-4 z-50 flex gap-2 rounded-lg p-3 \">\n\t<Input type=\"text\" bind:value={todoInput} placeholder=\"Enter your todo\" class=\"w-72\" />\n\t<Button variant=\"default\" on:click={addTodo} class=\"bg-primary hover:bg-primary/90\"\n\t\t>Add Todo</Button\n\t>\n</Card>\n\n{#each todos as todo (todo.id)}\n\t<div\n\t\tid={todo.id}\n\t\tclass=\" absolute cursor-move\"\n\t\tstyle=\"left: {todo.x}px; top: {todo.y}px; z-index: {todo.zIndex};\"\n\t\ton:mousedown={(e) => dragStart(e, todo)}\n\t>\n\t\t<Card class=\"min-h-[100px] min-w-[200px] overflow-auto rounded-md bg-card p-4 \">\n\t\t\t<CardContent class=\"p-2\">\n\t\t\t\t{#if editingId === todo.id}\n\t\t\t\t\t<div class=\"edit-area\">\n\t\t\t\t\t\t<Textarea\n\t\t\t\t\t\t\tvalue={todo.text}\n\t\t\t\t\t\t\ton:input={(e) => updateTodo(todo.id, e.target.value)}\n\t\t\t\t\t\t\tclass=\"mb-2 min-h-[80px] resize-none\"\n\t\t\t\t\t\t\tautofocus\n\t\t\t\t\t\t\ton:blur={finishEditing}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button variant=\"outline\" size=\"sm\" on:click={finishEditing} class=\"mt-2\">Done</Button>\n\t\t\t\t\t</div>\n\t\t\t\t{:else}\n\t\t\t\t\t<p class=\"mb-2 break-words text-xl text-card-foreground\">{todo.text}</p>\n\t\t\t\t{/if}\n\t\t\t</CardContent>\n\n\t\t\t<div class=\"absolute right-1 top-1 flex gap-1\">\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tsize=\"icon\"\n\t\t\t\t\tclass=\"h-6 w-6 rounded-full\"\n\t\t\t\t\ton:click={() => startEditing(todo.id)}\n\t\t\t\t>\n\t\t\t\t\t<Edit2 class=\"h-3 w-3\" />\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"destructive\"\n\t\t\t\t\tsize=\"icon\"\n\t\t\t\t\tclass=\"h-6 w-6 rounded-full\"\n\t\t\t\t\ton:click={() => deleteTodo(todo.id)}\n\t\t\t\t>\n\t\t\t\t\t<X class=\"h-3 w-3\" />\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</Card>\n\t</div>\n{/each}\n```\n\nOnly show edit and delete buttons on hover.\nI'll update the code to show edit and delete buttons only when hovering over the todo card.\n\n<patch>\n<title>Show todo buttons only on hover</title>\n<edit>\n<path>todos/src/routes/+page.svelte</path>\n<description>Add a CSS class for hiding buttons by default and showing them on hover</description>\n<operation>insert_after</operation>\n<old_text><svelte:window on:keydown={handleKeyDown} /></old_text>\n<new_text>\n\n<style>\n\t.todo-buttons {\n\t\topacity: 0;\n\t\ttransition: opacity 0.2s ease-in-out;\n\t}\n\t\n\t.todo-card:hover .todo-buttons {\n\t\topacity: 1;\n\t}\n</style>\n</new_text>\n</edit>\n\n<edit>\n<path>todos/src/routes/+page.svelte</path>\n<description>Add todo-card class to the Card component and todo-buttons class to the buttons container</description>\n<operation>update</operation>\n<old_text>\t\t<Card class=\"min-h-[100px] min-w-[200px] overflow-auto rounded-md bg-card p-4 \"></old_text>\n<new_text>\t\t<Card class=\"todo-card min-h-[100px] min-w-[200px] overflow-auto rounded-md bg-card p-4 \"></new_text>\n</edit>\n\n<edit>\n<path>todos/src/routes/+page.svelte</path>\n<description>Add todo-buttons class to the buttons container</description>\n<operation>update</operation>\n<old_text>\t\t\t<div class=\"absolute right-1 top-1 flex gap-1\"></old_text>\n<new_text>\t\t\t<div class=\"todo-buttons absolute right-1 top-1 flex gap-1\"></new_text>\n</edit>\n</patch>\nCan we have a line length limit?\nso lines aren't too long. also line wrap\nI'll update the code to add line length limits and improve text wrapping for better readability.\n\n<patch>\n<title>Add line length limits and improve text wrapping</title>\n<edit>\n<path>todos/src/routes/+page.svelte</path>\n<description>Update the Card component to add max-width and improve word wrapping</description>\n<operation>update</operation>\n<old_text>\t\t<Card class=\"todo-card min-h-[100px] min-w-[200px] overflow-auto rounded-md bg-card p-4 \"></old_text>\n<new_text>\t\t<Card class=\"todo-card min-h-[100px] min-w-[200px] max-w-[300px] overflow-auto rounded-md bg-card p-4 \"></new_text>\n</edit>\n\n<edit>\n<path>todos/src/routes/+page.svelte</path>\n<description>Improve text wrapping for the todo content</description>\n<operation>update</operation>\n<old_text>\t\t\t\t\t<p class=\"mb-2 break-words text-xl text-card-foreground\">{todo.text}</p></old_text>\n<new_text>\t\t\t\t\t<p class=\"mb-2 break-words whitespace-pre-wrap text-xl text-card-foreground\">{todo.text}</p></new_text>\n</edit>\n\n<edit>\n<path>todos/src/routes/+page.svelte</path>\n<description>Update Textarea to improve wrapping and automatically resize based on content</description>\n<operation>update</operation>\n<old_text>\t\t\t\t\t\t\tclass=\"mb-2 min-h-[80px] resize-none\"</old_text>\n<new_text>\t\t\t\t\t\t\tclass=\"mb-2 min-h-[80px] w-full resize-none whitespace-pre-wrap\"</new_text>\n</edit>\n\n<edit>\n<path>todos/src/routes/+page.svelte</path>\n<description>Add CSS to ensure text wraps properly within the card</description>\n<operation>insert_after</operation>\n<old_text><style>\n\t.todo-buttons {\n\t\topacity: 0;\n\t\ttransition: opacity 0.2s ease-in-out;\n\t}\n\t\n\t.todo-card:hover .todo-buttons {\n\t\topacity: 1;\n\t}</old_text>\n<new_text>\n\t\n\t/* Ensure text wraps within cards */\n\t.todo-card p {\n\t\toverflow-wrap: break-word;\n\t\tword-wrap: break-word;\n\t\thyphens: auto;\n\t\tline-height: 1.5;\n\t}</new_text>\n</edit>\n</patch>\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":169}}},{"id":{"replica_id":0,"value":19},"start":5344,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":170}}},{"id":{"replica_id":0,"value":20},"start":6673,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":171}}},{"id":{"replica_id":0,"value":117},"start":6747,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":172}}},{"id":{"replica_id":0,"value":118},"start":8586,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":173}}}],"summary":"Draggable Todo Cards with Hover Controls","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null},{"range":{"start":3,"end":5299},"icon":"File","label":"todos/src/routes/+page.svelte","metadata":{"path":"todos/src/routes/+page.svelte"}}]}