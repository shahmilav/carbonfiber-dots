{"id":"42f75f57-f70e-4944-bdeb-af7935390361","zed":"context","version":"0.4.0","text":"/default\n\nusing shadcn-svelte and tailwindcss, sveltekit, make a simple todo app that stores TODOs in localstorage\n\n# Creating a Simple Todo App with ShadCN-Svelte, TailwindCSS and SvelteKit\n\nLet's build a todo app that stores the todos in localStorage. I'll set up the project structure and create the necessary components.\n\n## Project Setup\n\nFirst, let's set up the basic file structure for a SvelteKit project with ShadCN-Svelte and TailwindCSS:\n\n### `src/routes/+page.svelte`\n```svelte\n<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { Button } from '$lib/components/ui/button';\n  import { Input } from '$lib/components/ui/input';\n  import { Card, CardContent, CardHeader, CardTitle } from '$lib/components/ui/card';\n  import { Checkbox } from '$lib/components/ui/checkbox';\n  import { Trash2 } from 'lucide-svelte';\n\n  interface Todo {\n    id: string;\n    text: string;\n    completed: boolean;\n  }\n\n  let todos: Todo[] = [];\n  let newTodoText = '';\n\n  onMount(() => {\n    const storedTodos = localStorage.getItem('todos');\n    if (storedTodos) {\n      todos = JSON.parse(storedTodos);\n    }\n  });\n\n  function saveTodos() {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }\n\n  function addTodo() {\n    if (newTodoText.trim() === '') return;\n    \n    const newTodo: Todo = {\n      id: crypto.randomUUID(),\n      text: newTodoText,\n      completed: false\n    };\n    \n    todos = [...todos, newTodo];\n    newTodoText = '';\n    saveTodos();\n  }\n\n  function toggleTodo(id: string) {\n    todos = todos.map(todo => \n      todo.id === id ? { ...todo, completed: !todo.completed } : todo\n    );\n    saveTodos();\n  }\n\n  function deleteTodo(id: string) {\n    todos = todos.filter(todo => todo.id !== id);\n    saveTodos();\n  }\n\n  function handleKeydown(e: KeyboardEvent) {\n    if (e.key === 'Enter') {\n      addTodo();\n    }\n  }\n</script>\n\n<div class=\"container mx-auto py-10 px-4 max-w-md\">\n  <Card class=\"w-full\">\n    <CardHeader>\n      <CardTitle class=\"text-center\">Todo App</CardTitle>\n    </CardHeader>\n    <CardContent>\n      <div class=\"flex gap-2 mb-6\">\n        <Input \n          bind:value={newTodoText} \n          placeholder=\"Add a new todo...\" \n          on:keydown={handleKeydown}\n        />\n        <Button on:click={addTodo}>Add</Button>\n      </div>\n\n      <div class=\"space-y-3\">\n        {#if todos.length === 0}\n          <p class=\"text-center text-muted-foreground\">No todos yet. Add one above!</p>\n        {/if}\n        \n        {#each todos as todo (todo.id)}\n          <div class=\"flex items-center justify-between p-3 border rounded-md\">\n            <div class=\"flex items-center gap-2\">\n              <Checkbox \n                id={todo.id} \n                checked={todo.completed} \n                on:change={() => toggleTodo(todo.id)}\n              />\n              <label \n                for={todo.id} \n                class=\"text-sm {todo.completed ? 'line-through text-muted-foreground' : ''}\"\n              >\n                {todo.text}\n              </label>\n            </div>\n            <Button \n              variant=\"ghost\" \n              size=\"icon\" \n              class=\"h-8 w-8 text-destructive\" \n              on:click={() => deleteTodo(todo.id)}\n            >\n              <Trash2 size={16} />\n            </Button>\n          </div>\n        {/each}\n      </div>\n    </CardContent>\n  </Card>\n</div>\n```\n\n### `src/app.postcss`\n```css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n \n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 222.2 84% 4.9%;\n \n    --muted: 210 40% 96.1%;\n    --muted-foreground: 215.4 16.3% 46.9%;\n \n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 84% 4.9%;\n \n    --card: 0 0% 100%;\n    --card-foreground: 222.2 84% 4.9%;\n \n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n \n    --primary: 222.2 47.4% 11.2%;\n    --primary-foreground: 210 40% 98%;\n \n    --secondary: 210 40% 96.1%;\n    --secondary-foreground: 222.2 47.4% 11.2%;\n \n    --accent: 210 40% 96.1%;\n    --accent-foreground: 222.2 47.4% 11.2%;\n \n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 210 40% 98%;\n \n    --ring: 215 20.2% 65.1%;\n \n    --radius: 0.5rem;\n  }\n \n  .dark {\n    --background: 222.2 84% 4.9%;\n    --foreground: 210 40% 98%;\n \n    --muted: 217.2 32.6% 17.5%;\n    --muted-foreground: 215 20.2% 65.1%;\n \n    --popover: 222.2 84% 4.9%;\n    --popover-foreground: 210 40% 98%;\n \n    --card: 222.2 84% 4.9%;\n    --card-foreground: 210 40% 98%;\n \n    --border: 217.2 32.6% 17.5%;\n    --input: 217.2 32.6% 17.5%;\n \n    --primary: 210 40% 98%;\n    --primary-foreground: 222.2 47.4% 11.2%;\n \n    --secondary: 217.2 32.6% 17.5%;\n    --secondary-foreground: 210 40% 98%;\n \n    --accent: 217.2 32.6% 17.5%;\n    --accent-foreground: 210 40% 98%;\n \n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 85.7% 97.3%;\n \n    --ring: 217.2 32.6% 17.5%;\n  }\n}\n \n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}\n```\n\n### `src/routes/+layout.svelte`\n```svelte\n<script>\n  import \"../app.postcss\";\n</script>\n\n<slot />\n```\n\n## ShadCN Components\n\nYou'll need to set up the ShadCN components used above. Here are the main components we need:\n\n### `$lib/components/ui/button/index.ts`\n```typescript\nimport Root from \"./button.svelte\";\n\nexport {\n  Root as Button\n};\n```\n\n### `$lib/components/ui/input/index.ts`\n```typescript\nimport Root from \"./input.svelte\";\n\nexport {\n  Root as Input\n};\n```\n\n### `$lib/components/ui/card/index.ts`\n```typescript\nimport Card from \"./card.svelte\";\nimport CardContent from \"./card-content.svelte\";\nimport CardDescription from \"./card-description.svelte\";\nimport CardFooter from \"./card-footer.svelte\";\nimport CardHeader from \"./card-header.svelte\";\nimport CardTitle from \"./card-title.svelte\";\n\nexport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle\n};\n```\n\n### `$lib/components/ui/checkbox/index.ts`\n```typescript\nimport Root from \"./checkbox.svelte\";\n\nexport {\n  Root as Checkbox\n};\n```\n\n## Installation Instructions\n\n1. Create a new SvelteKit project:\n```bash\nnpm create svelte@latest my-todo-app\ncd my-todo-app\n```\n\n2. Install dependencies:\n```bash\nnpm install\nnpm install -D tailwindcss postcss autoprefixer shadcn-svelte lucide-svelte\n```\n\n3. Initialize Tailwind CSS:\n```bash\nnpx tailwindcss init -p\n```\n\n4. Initialize ShadCN:\n```bash\nnpx shadcn-svelte init\n```\n\n5. Add the components we need:\n```bash\nnpx shadcn-svelte add button input card checkbox\n```\n\n6. Configure your `tailwind.config.js` to include the paths for the ShadCN components:\n```javascript\n/** @type {import('tailwindcss').Config} */\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./src/**/*.{html,js,svelte,ts}\"],\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n    },\n  },\n  plugins: [],\n}\n```\n\n7. Update your source files with the code I provided above.\n\n8. Run the development server:\n```bash\nnpm run dev\n```\n\n## Features of this Todo App\n\n1. **Add Todos**: Type in the input field and press Enter or click Add button\n2. **Mark as Complete**: Click the checkbox to toggle completion status\n3. **Delete Todos**: Click the trash icon to remove a todo\n4. **Persistent Storage**: Todos are saved to localStorage and loaded on page mount\n5. **Responsive Design**: Works well on mobile and desktop\n6. **Visual Indication**: Completed todos are shown with strikethrough text\n\nThis provides a clean, functional todo app with a modern UI using ShadCN components and TailwindCSS for styling, all within a SvelteKit project.\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":211}}},{"id":{"replica_id":0,"value":172},"start":116,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":212}}},{"id":{"replica_id":0,"value":173},"start":8904,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":213}}}],"summary":"Todo App with Shadcn-Svelte Storage","slash_command_output_sections":[]}